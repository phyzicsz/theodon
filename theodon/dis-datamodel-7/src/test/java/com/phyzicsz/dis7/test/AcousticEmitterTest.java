/**
* Autogenerated by dis-codegen
*
DO NOT EDIT DIRECTLY
*/
package com.phyzicsz.dis7.test;

import java.nio.ByteBuffer;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import org.junit.Test;

/**
 * information about a specific UA emmtter. Section 6.2.2.
 */
public class AcousticEmitterTest {

	@Test
	public void testAcousticEmitter() {
            //construct open-dis format
            edu.nps.moves.dis7.AcousticEmitter emitter1 = new edu.nps.moves.dis7.AcousticEmitter();
            emitter1.setAcousticIDNumber((short)1);
            emitter1.setAcousticSystemName(10);
            emitter1.setAcousticFunction((short)2);
            
            //construct new format
            com.phyzicsz.dis7.AcousticEmitter emitter2 = new com.phyzicsz.dis7.AcousticEmitter();
            emitter2.setAcousticIDNumber((short)1);
            emitter2.setAcousticSystemName(10);
            emitter2.setAcousticFunction((short)2);
            
            //serialize both to byteBuffers
            ByteBuffer buffer1 = ByteBuffer.allocate(256);
            emitter1.marshal(buffer1);
            buffer1.flip();

            ByteBuffer buffer2 = ByteBuffer.allocate(256);
            emitter2.serialize(buffer2);
            buffer2.flip();
           
            //compare the buffers
            assertEquals(buffer1.limit(),buffer2.limit());
            assertEquals(buffer2.compareTo(buffer1),0);
            
            //deserialze the old buffer into the new format
            com.phyzicsz.dis7.AcousticEmitter emitter3 = new com.phyzicsz.dis7.AcousticEmitter();
            emitter3.deserialize(buffer2);
            
            //test the eqquality
            assertTrue(emitter3.equals(emitter2));
            
            
	}
}